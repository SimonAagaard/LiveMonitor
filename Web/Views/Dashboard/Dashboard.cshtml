@model Data.Entities.Dashboard

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div id="chart1"></div>
</div>

@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    @*Should most likely host it locally instead of using CDN, but this was quick n dirty :pregnantWoman:*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.js" integrity="sha256-H9jAz//QLkDOy/nzE9G4aYijQtkLt9FvGmdUTwBk6gs=" crossorigin="anonymous"></script>
    <script>
        //Default values for white theme
        var color = 'grey';
        var backgroundColor = '#ffffff';
        var lineColor = '#3366cc';
        document.getElementById("darkBtn").addEventListener("click", setDashboardStyleFromCookie);
        document.getElementById("lightBtn").addEventListener("click", setDashboardStyleFromCookie);
        window.onload = setDashboardStyleFromCookie();
        function setDashboardStyleFromCookie() {
            var cssTitle = getCookie(styleCookieName);

            if (cssTitle == 'light' || cssTitle == null) {
                document.getElementById('darkBtn').style.display = 'block';
                document.getElementById('lightBtn').style.display = 'none';
            }
            //dark
            else {
                color = '#0ffc4b';
                backgroundColor = '#222';
                lineColor = '#0ffc4b';
                document.getElementById('lightBtn').style.display = 'block';
                document.getElementById('darkBtn').style.display = 'none';
            }

            if (cssTitle != null) {
                switchStyle(cssTitle);
            }

        }
    </script>

    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(callback);

        function callback() {
            var option = {
                title: "@Model.DashboardName",
                titleTextStyle: {
                    color: color,
                    fontSize: 28,
                    bold: true,
                },
                width: 900,
                height: 650,
                legend: { position: 'none' },
              
                //Horizontal axis styling
                hAxis: {
                    format: 'HH:mm:ss',
                    textStyle: {
                        color: color
                    },
                },
                //Vertical axis styling
                vAxis: {
                  
                    baselineColor: 'transparent',
                    textStyle: {
                        color: color
                    },
                },
                backgroundColor: backgroundColor,
                //Line color
                series: {
                    0: {color: lineColor},
                },
                chartArea: {
                    height: '80%', width: '85%', left: 100,
                    backgroundColor: { stroke: "gray", strokeWidth: 1 }
                },
            };
            //Choose which chart type to use on the line below
            var chart = new google.visualization.LineChart(document.getElementById('chart1'));
            var data = new google.visualization.DataTable();
            data.addColumn('datetime', 'TimeStamp');
            data.addColumn('number', 'Value');

            drawChart();
            //ChartFromDataSet();
            //Update speed is controlled here
            setInterval(drawChart, 60000);
          
            function drawChart() {
                $.get('GetDataSet', integrationSettingId = 'integrationSettingId=854c79b2-6b31-472c-938f-f1077343aac0', function (dataSet) {
                    var timeStamp = new Date(dataSet.xValue);
                    var time = { v: timeStamp, f: moment(timeStamp).format('HH:mm:ss') };
                    var val = dataSet.yValue;

                    data.addRow([time, val]);
                    if (data.getNumberOfRows() > 100) {
                        data.removeRow(0);
                    }
                    chart.draw(data, option);
                });
            }
        }
    </script>
}